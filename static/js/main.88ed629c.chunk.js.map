{"version":3,"sources":["App.js","Buttons.js","reportWebVitals.js","index.js"],"names":["App","Component","props","state","count","this","setState","className","onClick","increment","decrement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAmCeA,GCjCOC,Y,kDDEpB,WAAYC,GAAO,IAAD,8BAChB,cAAOA,IACJC,MAAQ,CACXC,MAAO,GAHS,E,wDAQhBC,KAAKC,SAAS,CACZF,MAAOC,KAAKF,MAAMC,MAAQ,M,kCAK5BC,KAAKC,SAAS,CACZF,MAAOC,KAAKF,MAAMC,MAAQ,M,+BAKrB,IAAD,OACR,OACE,sBAAKG,UAAU,MAAf,UACA,6BAAKF,KAAKF,MAAMC,QAChB,wBAAQI,QAAS,kBAAM,EAAKC,aAA5B,eACA,wBAAQD,QAAS,kBAAM,EAAKE,aAA5B,sB,GA1BcT,cESHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88ed629c.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport Buttons from \"./Buttons\"\n\nclass App extends Component {\n  constructor(props){\n    super (props);\n  this.state = {\n    count: 0\n  }\n}\n\nincrement() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  decrement() {\n    this.setState({\n      count: this.state.count - 1\n    });\n  }\n\n\n  render(){\n  return (\n    <div className=\"App\">\n    <h1>{this.state.count}</h1>\n    <button onClick={() => this.increment()}>+</button>\n    <button onClick={() => this.decrement()}>-</button>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\n\r\nclass Buttons extends Component {\r\n    state = {\r\n        count: 0\r\n      }\r\n\r\n    increment= (e) => {\r\n        this.setState({\r\n          count: this.state.count + 1\r\n        });\r\n        console.log(this.state.count)\r\n      }\r\n    \r\n      decrement = (e) => {\r\n        this.setState({\r\n          count: this.state.count - 1\r\n        });\r\n        console.log(this.state.count)\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.state.increment}>+</button>\r\n                <button onClick={this.state.decrement}>-</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Buttons","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}